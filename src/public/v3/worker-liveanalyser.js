class DFT{constructor(bufferSize,sampleRate){this.bufferSize=bufferSize,this.sampleRate=sampleRate,this.bandwidth=2/this.bufferSize*sampleRate/2,this.spectrum=new Float64Array(this.bufferSize/2),this.real=new Float64Array(this.bufferSize),this.imag=new Float64Array(this.bufferSize),this.peakBand=0,this.peak=0;var N=this.bufferSize/2*this.bufferSize,TWO_PI=2*Math.PI;this.sinTable=new Float64Array(N),this.cosTable=new Float64Array(N);for(var k=0;k<this.bufferSize/2;k++)for(var n=0;n<this.bufferSize;n++)loopcount++,this.sinTable[k*this.bufferSize+n]=Math.sin(.5*n*TWO_PI*10**(3*k/(this.bufferSize/2)-3)),this.cosTable[k*this.bufferSize+n]=Math.cos(.5*n*TWO_PI*10**(3*k/(this.bufferSize/2)-3))}forward(buffer){for(var rval,ival,real=this.real,imag=this.imag,k=0;k<this.bufferSize/2;k++){rval=0,ival=0;for(var n=0;n<buffer.length;n++)rval+=this.cosTable[k*buffer.length+n]*buffer[n],ival+=this.sinTable[k*buffer.length+n]*buffer[n];real[k]=rval,imag[k]=ival}return this.calculateSpectrum()}getBandFrequency(index){return this.bandwidth*index+this.bandwidth/2}calculateSpectrum(){for(var rval,ival,mag,spectrum=this.spectrum,real=this.real,imag=this.imag,bSi=2/this.bufferSize,i=0;i<this.bufferSize/2;i++)rval=real[i],ival=imag[i],mag=bSi*Math.sqrt(rval*rval+ival*ival),mag>this.peak&&(this.peakBand=i,this.peak=mag),spectrum[i]=mag}}class FFT{constructor(bufferSize,sampleRate){this.bufferSize=bufferSize,this.sampleRate=sampleRate,this.bandwidth=2/this.bufferSize*sampleRate/2,this.spectrum=new Float64Array(this.bufferSize/2),this.real=new Float64Array(this.bufferSize),this.imag=new Float64Array(this.bufferSize),this.peakBand=0,this.peak=0,this.reverseTable=new Uint32Array(this.bufferSize);for(var i,limit=1,bit=this.bufferSize>>1;limit<this.bufferSize;){for(i=0;i<limit;i++)loopcount++,this.reverseTable[i+limit]=this.reverseTable[i]+bit;limit<<=1,bit>>=1}for(this.sinTable=new Float64Array(this.bufferSize),this.cosTable=new Float64Array(this.bufferSize),i=0;i<this.bufferSize;i++)loopcount++,this.sinTable[i]=Math.sin(-Math.PI/i),this.cosTable[i]=Math.cos(-Math.PI/i)}forward(buffer){var phaseShiftStepReal,phaseShiftStepImag,currentPhaseShiftReal,currentPhaseShiftImag,off,tr,ti,tmpReal,i,halfSize=1;for(i=0;i<this.bufferSize;i++)this.real[i]=buffer[this.reverseTable[i]],this.imag[i]=0;for(;halfSize<this.bufferSize;){phaseShiftStepReal=this.cosTable[halfSize],phaseShiftStepImag=this.sinTable[halfSize],currentPhaseShiftReal=1,currentPhaseShiftImag=0;for(var fftStep=0;fftStep<halfSize;fftStep++){for(i=fftStep;i<this.bufferSize;)off=i+halfSize,tr=currentPhaseShiftReal*this.real[off]-currentPhaseShiftImag*this.imag[off],ti=currentPhaseShiftReal*this.imag[off]+currentPhaseShiftImag*this.real[off],this.real[off]=this.real[i]-tr,this.imag[off]=this.imag[i]-ti,this.real[i]+=tr,this.imag[i]+=ti,i+=halfSize<<1;tmpReal=currentPhaseShiftReal,currentPhaseShiftReal=tmpReal*phaseShiftStepReal-currentPhaseShiftImag*phaseShiftStepImag,currentPhaseShiftImag=tmpReal*phaseShiftStepImag+currentPhaseShiftImag*phaseShiftStepReal}halfSize<<=1}return this.calculateSpectrum()}getBandFrequency(index){return this.bandwidth*index+this.bandwidth/2}calculateSpectrum(){for(var rval,ival,mag,spectrum=this.spectrum,real=this.real,imag=this.imag,bSi=2/this.bufferSize,i=0;i<this.bufferSize/2;i++)rval=real[i],ival=imag[i],mag=bSi*Math.sqrt(rval*rval+ival*ival),mag>this.peak&&(this.peakBand=i,this.peak=mag),spectrum[i]=mag}}class Spline{constructor(xs,ys){this.xs=xs,this.ys=ys,this.ks=this.getNaturalKs(new Float64Array(this.xs.length))}getNaturalKs(ks){for(var n=this.xs.length-1,A=this.zerosMat(n+1,n+2),i=1;i<n;i++)loopcount++,A[i][i-1]=1/(this.xs[i]-this.xs[i-1]),A[i][i]=2*(1/(this.xs[i]-this.xs[i-1])+1/(this.xs[i+1]-this.xs[i])),A[i][i+1]=1/(this.xs[i+1]-this.xs[i]),A[i][n+1]=3*((this.ys[i]-this.ys[i-1])/((this.xs[i]-this.xs[i-1])*(this.xs[i]-this.xs[i-1]))+(this.ys[i+1]-this.ys[i])/((this.xs[i+1]-this.xs[i])*(this.xs[i+1]-this.xs[i])));return A[0][0]=2/(this.xs[1]-this.xs[0]),A[0][1]=1/(this.xs[1]-this.xs[0]),A[0][n+1]=3*(this.ys[1]-this.ys[0])/((this.xs[1]-this.xs[0])*(this.xs[1]-this.xs[0])),A[n][n-1]=1/(this.xs[n]-this.xs[n-1]),A[n][n]=2/(this.xs[n]-this.xs[n-1]),A[n][n+1]=3*(this.ys[n]-this.ys[n-1])/((this.xs[n]-this.xs[n-1])*(this.xs[n]-this.xs[n-1])),this.solve(A,ks)}getIndexBefore(target){let low=0,high=this.xs.length,mid=0;for(;low<high;)mid=Math.floor((low+high)/2),this.xs[mid]<target&&mid!==low?low=mid:this.xs[mid]>=target&&mid!==high?high=mid:high=low;return low+1}at(x){let i=this.getIndexBefore(x);const t=(x-this.xs[i-1])/(this.xs[i]-this.xs[i-1]),a=this.ks[i-1]*(this.xs[i]-this.xs[i-1])-(this.ys[i]-this.ys[i-1]),b=-this.ks[i]*(this.xs[i]-this.xs[i-1])+(this.ys[i]-this.ys[i-1]),q=(1-t)*this.ys[i-1]+t*this.ys[i]+t*(1-t)*(a*(1-t)+b*t);return q}solve(A,ks){const m=A.length;let h=0,k=0;for(;h<m&&k<=m;){loopcount++;let i_max=0,max=-Infinity;for(let i=h;i<m;i++){const v=Math.abs(A[i][k]);v>max&&(i_max=i,max=v)}if(0===A[i_max][k])k++;else{this.swapRows(A,h,i_max);for(let i=h+1;i<m;i++){const f=A[i][k]/A[h][k];A[i][k]=0;for(let j=k+1;j<=m;j++)A[i][j]-=A[h][j]*f}h++,k++}}for(let i=m-1;0<=i;i--){loopcount++;var v=0;A[i][i]&&(v=A[i][m]/A[i][i]),ks[i]=v;for(let j=i-1;0<=j;j--)A[j][m]-=A[j][i]*v,A[j][i]=0}return ks}zerosMat(r,c){const A=[];for(let i=0;i<r;i++)A.push(new Float64Array(c));return A}swapRows(m,k,l){let p=m[k];m[k]=m[l],m[l]=p}}class ISO226{constructor(db){this.db=db,this.tbl_f=[20,25,31.5,40,50,63,80,100,125,160,200,250,315,400,500,630,800,1e3,1250,1600,2e3,2500,3150,4e3,5e3,6300,8e3,1e4,12500],this.tbl_alpha_f=[.532,.506,.48,.455,.432,.409,.387,.367,.349,.33,.315,.301,.288,.276,.267,.259,.253,.25,.246,.244,.243,.243,.243,.242,.242,.245,.254,.271,.301],this.tbl_L_U=[-31.6,-27.2,-23,-19.1,-15.9,-13,-10.3,-8.1,-6.2,-4.5,-3.1,-2,-1.1,-.4,0,.3,.5,0,-2.7,-4.1,-1,1.7,2.5,1.2,-2.1,-7.1,-11.2,-10.7,-3.1],this.tbl_T_f=[78.5,68.7,59.5,51.1,44,37.5,31.5,26.5,22.1,17.9,14.4,11.4,8.6,6.2,4.4,3,2.2,2.4,3.5,1.7,-1.3,-4.2,-6,-5.4,-1.5,6,12.6,13.9,12.3],this.spline=this.iso226_spl_itpl(db)}freq(f){return this.spline.at(f)}tabled_f(){return this.tbl_f.concat(2e4)}tabled_L_p(L_N){for(var L_p=[],tbf=this.tabled_B_f(L_N),i=0;i<tbf.length;i++)loopcount++,L_p.push(40*Math.log10(tbf[i])+94);return L_p.concat(L_p[0])}tabled_B_f(L_p){for(var B_f=[],i=0;i<this.tbl_T_f.length;i++)loopcount++,B_f.push(.00447*(10**(.025*L_p)-1.15)+(.4*10**((this.tbl_T_f[i]+this.tbl_L_U[i])/10-9))**this.tbl_alpha_f[i]);return B_f.concat(B_f[0])}iso226_spl_contour(L_N){if(0>L_N||90<L_N)throw new Error("Parameter L_N out of bounds [0-90].");return[this.tabled_f(),this.tabled_L_p(L_N)]}iso226_spl_itpl(L_N){var i=this.iso226_spl_contour(L_N);return new Spline(i[0],i[1])}}var regFFT,logDFT,bufferSize=1024,sampleRate=2e4,audioBuffer=[],regFFTAudioSpectrum=[],rawRegFFTAudioData=[],splRegFFTAudioData=[],prsRegFFTAudioData=[],logDFTAudioSpectrum=[],rawLogDFTAudioData=[],splLogDFTAudioData=[],prsLogDFTAudioData=[],isVocal=!1,cpuAudioData={alpha:-.1,emo1gamma:.5,emo2gamma:.25,loop:0,sumloop:1,value1:{data:0,x:0},value2:{data:0,x:0},memory1:{data:0,x:0},memory2:{data:0,x:0},emotion1:{data:0,x:0,sum:0},emotion2:{data:0,x:0,sum:0},lastInertia1:0,lastInertia2:0,lastNorm1:0,lastNorm2:0},isPaused=!0,isStream=!1,canvases=[];onmessage=event=>{const data=event.data.data;switch(event.data.event){case"init":{bufferSize=data.bufferSize,sampleRate=data.sampleRate,isStream=data.isStream||!1,regFFT=new FFT(bufferSize,sampleRate),logDFT=new DFT(bufferSize,sampleRate);break}case"play":{play();break}case"pause":{pause();break}case"process":{process(data);break}case"close":{close();break}case"addCanvas":{addCanvas(data);break}case"resizeCanvas":{resizeCanvas(data);break}case"setcpuag":{cpuAudioData.alpha=data.alpha,cpuAudioData.emo1gamma=data.emo1gamma,cpuAudioData.emo2gamma=data.emo2gamma;break}case"resetemosum":{cpuAudioData.emotion1.sum=0,cpuAudioData.emotion2.sum=0;break}}};function play(){isPaused=!1}function pause(){isPaused=!0}function close(){pause()}var loopcount=0,firstProcess=!1;function process(data){function calcRegFFTData(){regFFT.forward(audioBuffer),regFFTAudioSpectrum=regFFT.spectrum,rawRegFFTAudioData=[],splRegFFTAudioData=[],prsRegFFTAudioData=[];for(var i=0;i<regFFTAudioSpectrum.length;i++){loopcount++;var db=10*Math.log10(regFFTAudioSpectrum[i]**2)+70;db=Math.max(0,db),db=Math.min(90,db);var freq=sampleRate/bufferSize*i,ndb=new ISO226(db).freq(freq),e=10**((ndb-70)/10);rawRegFFTAudioData.push([freq,regFFTAudioSpectrum[i]]),splRegFFTAudioData.push([freq,db]),prsRegFFTAudioData.push([freq,e])}}function calcLogDFTData(){logDFT.forward(audioBuffer),logDFTAudioSpectrum=logDFT.spectrum,rawLogDFTAudioData=[],splLogDFTAudioData=[],prsLogDFTAudioData=[];for(var i=0;i<logDFTAudioSpectrum.length;i++){loopcount++;var db=10*Math.log10(logDFTAudioSpectrum[i]**2)+70;db=Math.max(0,db),db=Math.min(90,db);var freq=20*10**(3*i/bufferSize),ndb=new ISO226(db).freq(freq),e=10**((ndb-70)/10);rawLogDFTAudioData.push([freq,logDFTAudioSpectrum[i]]),splLogDFTAudioData.push([freq,db]),prsLogDFTAudioData.push([freq,e])}}function calcCpuAudioData(){function essense(num,high,low){return 0<=num?2*high*Math.atan(num/high):0>num?2*low*Math.atan(num/low):void 0}cpuAudioData.loop++;var value1=0,value2=0;for(var i of prsLogDFTAudioData)value1+=i[1],value2+=i[1]*Math.log2(i[0]/440);value2/=value1,value1=Math.log10(10*value1),isVocal=!(-1.5>value1),isVocal=!0;var Inertia1,Inertia2,Norm1,Norm2,Memory1,Memory2,Emotion1,Emotion2;1==cpuAudioData.loop?(Inertia1=value1,Inertia2=value2,Norm1=1,Norm2=1):(Inertia1=value1+2**cpuAudioData.alpha*cpuAudioData.lastInertia1,Inertia2=value2+2**cpuAudioData.alpha*cpuAudioData.lastInertia2,Norm1=1+2**cpuAudioData.alpha*cpuAudioData.lastNorm1,Norm2=1+2**cpuAudioData.alpha*cpuAudioData.lastNorm2),Memory1=value1-Inertia1/Norm1,Memory2=value2-Inertia2/Norm2,Emotion1=essense(Memory1,cpuAudioData.emo1gamma,cpuAudioData.emo1gamma),Emotion2=essense(Memory2,cpuAudioData.emo2gamma,cpuAudioData.emo2gamma),cpuAudioData.lastInertia1=Inertia1,cpuAudioData.lastInertia2=Inertia2,cpuAudioData.lastNorm1=Norm1,cpuAudioData.lastNorm2=Norm2,cpuAudioData.value1.data=value1,cpuAudioData.value2.data=value2,cpuAudioData.memory1.data=Memory1,cpuAudioData.memory2.data=Memory2,cpuAudioData.emotion1.data=Emotion1,cpuAudioData.emotion2.data=Emotion2,(isStream||100<=cpuAudioData.loop)&&(0==!cpuAudioData.emotion1.sum&&cpuAudioData.sumloop++,cpuAudioData.emotion1.sum+=Emotion1,cpuAudioData.emotion2.sum+=Emotion2)}function postAudioData(){postMessage({event:"process",data:{logDFTAudioSpectrum:logDFTAudioSpectrum,rawLogDFTAudioData:rawLogDFTAudioData,prsLogDFTAudioData:prsLogDFTAudioData,cpuAudioData:cpuAudioData}})}if(!isPaused){loopcount=0;for(var bufferData=new Float32Array(data[0][0].length),i=0;i<data[0][0].length;i++)bufferData[i]=(data[0][0][i]+data[0][1][i])/2;if(0==audioBuffer.length)audioBuffer=bufferData;else if(audioBuffer.length>=bufferSize)calcRegFFTData(),calcLogDFTData(),calcCpuAudioData(),postAudioData(),frameCanvas(),audioBuffer=new Float32Array(0);else{var logDFTb=new Float32Array(audioBuffer.length+bufferData.length);logDFTb.set(audioBuffer),logDFTb.set(bufferData,audioBuffer.length),audioBuffer=logDFTb}firstProcess||(oneFrameCanvas(),firstProcess=!0)}}function addCanvas(data){var canvas={id:data.id,wrapper:data.wrapper,element:data.element,context:data.element.getContext("2d"),type:data.type,res:data.res,style:{strokeStyle:data.strokeStyle||data.color||"rgb(0, 255, 200)",fillStyle:data.fillStyle||data.color||"rgb(0, 255, 200)",font:data.font||12*data.res+"px 'DM Mono', Consolas"}};canvas.element.width=data.offsetWidth*data.res,canvas.element.height=data.offsetHeight*data.res,canvas.element.x=0,canvas.context.lineWidth=data.res,canvas.context.strokeStyle=canvas.style.strokeStyle,canvas.context.fillStyle=canvas.style.fillStyle,canvas.context.font=canvas.style.font,canvas.context.clearRect(0,0,canvas.element.width,canvas.element.height),canvas.context.beginPath(),canvases.push(canvas),oneFrameCanvas(),frameCanvas()}function resizeCanvas(data){for(var canvas of canvases)if(canvas.id==data.id){canvas.element.x=0,canvas.element.width=data.offsetWidth*canvas.res,canvas.element.height=data.offsetHeight*canvas.res,canvas.context.lineWidth=canvas.res,canvas.context.strokeStyle=canvas.style.strokeStyle,canvas.context.fillStyle=canvas.style.fillStyle,canvas.context.font=canvas.style.font;break}oneFrameCanvas()}function removeCanvas(data){for(var i=0;i<canvases.length;i++)if(canvases[i].id==data.id){canvases.splice(i,1);break}}function frameCanvas(){if(isVocal)for(var canvas of canvases)switch(canvas.type){case"freq-logdft226-line":{drawLogDFT226Line(canvas);break}case"freq-regfftraw-line":{drawRegFFTRawLine(canvas);break}case"freq-regfftraw-bar":{drawRegFFTRawBar(canvas);break}case"freq-regfft226-line":{drawRegFFT226Line(canvas);break}case"cpu-value1":{drawCpuValue1(canvas);break}case"cpu-value2":{drawCpuValue2(canvas);break}case"cpu-memory1":{drawCpuMemory1(canvas);break}case"cpu-memory2":{drawCpuMemory2(canvas);break}case"cpu-emotion1":{drawCpuEmotion1(canvas);break}case"cpu-emotion2":{drawCpuEmotion2(canvas);break}case"cpu-emotion-xy":{drawCpuEmotionXY(canvas);break}}}function oneFrameCanvas(){for(var canvas of canvases)switch(canvas.type){case"freq-logdft-label":{drawLogDFTLabel(canvas);break}case"freq-regfft-label":{drawRegFFTLabel(canvas);break}case"cpu-value1-label":{drawCpuValue1Label(canvas);break}case"cpu-value2-label":{drawCpuValue2Label(canvas);break}case"cpu-memory1-label":{drawCpuMemory1Label(canvas);break}case"cpu-memory2-label":{drawCpuMemory2Label(canvas);break}case"cpu-emotion1-label":{drawCpuEmotion1Label(canvas);break}case"cpu-emotion2-label":{drawCpuEmotion2Label(canvas);break}case"cpu-emotion-xy-label":{drawCpuEmotionXYLabel(canvas);break}}}function drawRegFFTRawLine(canvas){var element=canvas.element,context=canvas.context,res=canvas.res,dataArray=rawRegFFTAudioData;context.clearRect(0,0,element.width,element.height),context.beginPath();var hs=.25;isStream&&(hs=.075);for(var w=element.width/(dataArray.length-1),h=element.height/hs,i=0;i<dataArray.length;i++){loopcount++;var d=dataArray[i][1],dh=Math.max(res,d*h);0==i?context.moveTo(w*i,element.height-dh):context.lineTo(w*i,element.height-dh)}context.stroke()}function drawRegFFTRawBar(canvas){var element=canvas.element,context=canvas.context,res=canvas.res,dataArray=rawRegFFTAudioData;context.clearRect(0,0,element.width,element.height),context.beginPath();for(var w=element.width/(dataArray.length-1),i=0;i<dataArray.length;i++){loopcount++;var d=Math.floor(Math.min(255,255*(10*dataArray[i][1]))),r=d,g=0,b=d;128<=d&&(g=2*(d-128),b=d/4),context.fillStyle="rgb("+r+", "+g+", "+b+")",context.fillRect(w*i,0,w+res/2,element.height)}}function drawRegFFT226Line(canvas){var element=canvas.element,context=canvas.context,res=canvas.res,dataArray=prsRegFFTAudioData;context.clearRect(0,0,element.width,element.height),context.beginPath();for(var w=element.width/(dataArray.length-1),h=element.height/.075,i=0;i<dataArray.length;i++){loopcount++;var d=dataArray[i][1],dh=Math.max(res,d*h);0==i?context.moveTo(w*i,element.height-dh):context.lineTo(w*i,element.height-dh)}context.stroke()}function drawRegFFTLabel(canvas){var element=canvas.element,context=canvas.context,res=canvas.res;context.clearRect(0,0,element.width,element.height),context.beginPath();var w=element.width/bufferSize,s=64;600>element.width/res&&(s=128),600<=element.width/res&&800>element.width/res&&(s=96),800<=element.width/res&&1600>element.width/res&&(s=64),1600<=element.width/res&&(s=32);for(var i=0;i<bufferSize;i++){loopcount++;var freq=sampleRate/bufferSize*i;(0==i%s||i==bufferSize-1)&&(context.fillText(Math.floor(freq),w*i+2*res,10*res),context.moveTo(w*i,0),context.lineTo(w*i,element.height))}context.stroke()}function drawLogDFT226Line(canvas){var element=canvas.element,context=canvas.context,res=canvas.res,dataArray=prsLogDFTAudioData;context.clearRect(0,0,element.width,element.height),context.beginPath();var hs=.2;isStream&&(hs=.075);for(var w=element.width/(dataArray.length-1),h=element.height/hs,i=0;i<dataArray.length;i++){loopcount++;var d=dataArray[i][1],dh=Math.max(res,d*h);0==i?context.moveTo(w*i,element.height-dh):context.lineTo(w*i,element.height-dh)}context.stroke()}function drawLogDFTLabel(canvas){var element=canvas.element,context=canvas.context,res=canvas.res;context.clearRect(0,0,element.width,element.height),context.beginPath();var w=element.width/bufferSize,s=64;600>element.width/res&&(s=128),600<=element.width/res&&800>element.width/res&&(s=96),800<=element.width/res&&1600>element.width/res&&(s=64),1600<=element.width/res&&(s=32);for(var i=0;i<bufferSize;i++){loopcount++;var freq=20*10**(3*i/bufferSize);(0==i%s||i==bufferSize-1)&&(context.fillText(Math.floor(freq),w*i+2*res,10*res),context.moveTo(w*i,0),context.lineTo(w*i,element.height))}context.stroke()}function drawCpuValue1(canvas){var element=canvas.element,context=canvas.context,d=cpuAudioData.value1.data,x=element.x,y=element.height-(d*(element.height/10)+3*(element.height/5));element.width<x+element.width/20?(context.clearRect(x,0,element.width/20,element.height),context.clearRect(0,0,element.width/20-(element.width-x),element.height)):context.clearRect(x,0,element.width/20,element.height),context.lineTo(x,y),context.stroke(),element.x+=5,context.beginPath(),element.x>=element.width&&(element.x=0,x=element.x),context.moveTo(x,y)}function drawCpuValue2(canvas){var element=canvas.element,context=canvas.context,d=cpuAudioData.value2.data,x=element.x,y=element.height-(d*(element.height/5)+4*(element.height/5));element.width<x+element.width/20?(context.clearRect(x,0,element.width/20,element.height),context.clearRect(0,0,element.width/20-(element.width-x),element.height)):context.clearRect(x,0,element.width/20,element.height),context.lineTo(x,y),context.stroke(),element.x+=5,context.beginPath(),element.x>=element.width&&(element.x=0,x=element.x),context.moveTo(x,y)}function drawCpuMemory1(canvas){var element=canvas.element,context=canvas.context,d=cpuAudioData.memory1.data,x=element.x,y=element.height-(d*(element.height/10)+3*(element.height/5));element.width<x+element.width/20?(context.clearRect(x,0,element.width/20,element.height),context.clearRect(0,0,element.width/20-(element.width-x),element.height)):context.clearRect(x,0,element.width/20,element.height),context.lineTo(x,y),context.stroke(),element.x+=5,context.beginPath(),element.x>=element.width&&(element.x=0,x=element.x),context.moveTo(x,y)}function drawCpuMemory2(canvas){var element=canvas.element,context=canvas.context,d=cpuAudioData.memory2.data,x=element.x,y=element.height-(d*(element.height/5)+2*(element.height/5));element.width<x+element.width/20?(context.clearRect(x,0,element.width/20,element.height),context.clearRect(0,0,element.width/20-(element.width-x),element.height)):context.clearRect(x,0,element.width/20,element.height),context.lineTo(x,y),context.stroke(),element.x+=5,context.beginPath(),element.x>=element.width&&(element.x=0,x=element.x),context.moveTo(x,y)}function drawCpuEmotion1(canvas){var element=canvas.element,context=canvas.context,d=2*cpuAudioData.emotion1.data,x=element.x,y=element.height-(d*(element.height/5)+2*(element.height/5));element.width<x+element.width/20?(context.clearRect(x,0,element.width/20,element.height),context.clearRect(0,0,element.width/20-(element.width-x),element.height)):context.clearRect(x,0,element.width/20,element.height),context.lineTo(x,y),context.stroke(),element.x+=5,context.beginPath(),element.x>=element.width&&(element.x=0,x=element.x),context.moveTo(x,y)}function drawCpuEmotion2(canvas){var element=canvas.element,context=canvas.context,d=4*cpuAudioData.emotion2.data,x=element.x,y=element.height-(d*(element.height/5)+3*(element.height/5));element.width<x+element.width/20?(context.clearRect(x,0,element.width/20,element.height),context.clearRect(0,0,element.width/20-(element.width-x),element.height)):context.clearRect(x,0,element.width/20,element.height),context.lineTo(x,y),context.stroke(),element.x+=5,context.beginPath(),element.x>=element.width&&(element.x=0,x=element.x),context.moveTo(x,y)}function drawCpuValue1Label(canvas){var element=canvas.element,context=canvas.context,d=0,x=element.width,y=element.height-(d*(element.height/10)+3*(element.height/5));context.beginPath(),context.moveTo(0,y),context.lineTo(x,y),context.stroke()}function drawCpuValue2Label(canvas){var element=canvas.element,context=canvas.context,d=0,x=element.width,y=element.height-(d*(element.height/10)+3*(element.height/5));context.beginPath(),context.moveTo(0,y),context.lineTo(x,y),context.stroke()}function drawCpuMemory1Label(canvas){var element=canvas.element,context=canvas.context,d=0,x=element.width,y=element.height-(d*(element.height/10)+3*(element.height/5));context.beginPath(),context.moveTo(0,y),context.lineTo(x,y),context.stroke()}function drawCpuMemory2Label(canvas){var element=canvas.element,context=canvas.context,d=0,x=element.width,y=element.height-(d*(element.height/5)+2*(element.height/5));context.beginPath(),context.moveTo(0,y),context.lineTo(x,y),context.stroke()}function drawCpuEmotion1Label(canvas){var element=canvas.element,context=canvas.context,d=0,x=element.width,y=element.height-(d*(element.height/5)+2*(element.height/5));context.beginPath(),context.moveTo(0,y),context.lineTo(x,y),context.stroke()}function drawCpuEmotion2Label(canvas){var element=canvas.element,context=canvas.context,d=0,x=element.width,y=element.height-(d*(element.height/5)+3*(element.height/5));context.beginPath(),context.moveTo(0,y),context.lineTo(x,y),context.stroke()}function drawCpuEmotionXY(canvas){var element=canvas.element,context=canvas.context,dx=cpuAudioData.emotion1.data*(element.width/10),dy=cpuAudioData.emotion2.data*(element.height/10),x=dx+element.width/2,y=dy+element.height/2;context.fillRect(x,y,2,2),context.stroke(),context.beginPath()}function drawCpuEmotionXYLabel(canvas){var element=canvas.element,context=canvas.context;context.beginPath(),context.moveTo(0,element.height/2),context.lineTo(element.width,element.height/2),context.moveTo(element.width/2,0),context.lineTo(element.width/2,element.height),context.stroke()}